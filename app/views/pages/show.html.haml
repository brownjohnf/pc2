.row
  .span12
    = render 'menu'
.row
  .span3
    = render 'shared/menu'
  .span7
    %ul.breadcrumb
      %li you are here
      %span.divider &rang;&rang;
      %li= link_to 'Home', pages_path
      %span.divider &rang;
      - @page.ancestors.each do |a|
        %li= link_to a.title, a
        %span.divider &rang;
      %li= @page.title
    %h1
      = flag_icon(@page.country.downcase)
      = @page.title
      %small
        last updated
        = time_ago_in_words(@page.updated_at)
        ago
        = link_to page_path(@page.id, :format => 'svg') do
          %i.icon-qrcode{ :rel => 'popover-top', :title => 'Get a QR Code', 'data-content' => "<h3>What's a QR Code?</h3>QR Codes are 3-dimensional barcodes which can be scanned by smartphones and used to store URLs. This link will take you to a QR Code image you can use online or in print to represent this page." }
    %h4
      %small originally posted
      = @page.created_at.strftime('%d %B %Y')
    %hr
    - if can? :update, @page
      .tabbable.tabs-right
        %ul.nav.nav-tabs
          %li.active= link_to 'view', '#1', 'data-toggle' => 'tab', :class => 'tooltip-left-slow', :title => 'View the page as others will see it'
          %li= link_to 'edit', '/editor' + request.path, :id => 'edit_link', :data => { :save_url => mercury_update_page_path(@page) }, :rel => 'popover-left', :title => 'Edit using Mercury Editor', 'data-content' => "Mercury editor is a very slick in-page editor. It will allow you to see the results of your changes as you make them, like a word processor.<h3>Warning!</h3>Mercury Editor <strong>WILL NOT</strong> work with Internet Explorer, because IE is in no way standards compliant. If you want to edit using Mercury, we strongly suggest you get a <em>real</em> browser such as Firefox or Chrome."
          %li= link_to 'properties', '#2', 'data-toggle' => 'tab', :class => 'tooltip-left-slow', :title => 'Quick-edit the raw properties in a form'
          %li= link_to 'destroy', '#3', 'data-toggle' => 'tab', :class => 'tooltip-left-slow', :title => 'Trash it' if can? :destroy, @page
          %li= link_to 'add editor', '#add_cont', 'data-toggle' => 'modal', :title => 'Add a contributor (an editor)' if can? :manage, Contribution
        .tab-content
          .tab-pane#1.active
            %p= @page.description
            .tags.right= render 'shared/tags', :tags => @page.tag_list
            .mercury-region#page_content{'data-type' => 'editable'}= markdown(@page.content)
          .tab-pane#2
            - @page.contributions.build if @page.contributions.empty?
            = render 'form'
          .tab-pane#3
            .well
              %h1 You sure?
              = button_to 'destroy this page', @page, confirm: 'Are you sure?', method: :delete, :class => 'btn btn-danger' if can? :destroy, @page
    - else
      %p= @page.description
      .tags.right= render 'shared/tags', :tags => @page.tag_list
      = markdown(@page.content)
  .span2
    = avatar_for @page, :size => :medium
    = render 'shared/social'
    %ul.nav.nav-list
      -if @pages
        %li.nav-header Related Pages
        - @pages.each do |p|
          %li= link_to p.title, p
      - if @case_studies
        %li.nav-header Related Case Studies
        - @case_studies.each do |c|
          %li= link_to c.title, c
      - if @page.contributions.count > 0
        %li.nav-header Contributors
        - @page.contributions.each do |c|
          - unless c.new_record?
            %li
              = link_to c.user.name, c.user
              - if can? :destroy, c
                %small= link_to 'remove', c, :confirm => 'Are you sure?', :method => :delete, :remote => true, :disable_with => 'removing...'
    %hr
    %h3 Popular Page Tags
    = cloud_of_tags Page
    - if can? :manage, Contribution
      .modal.modal-standard.hide#add_cont
        - @contribution = @page.contributions.build
        = semantic_form_for @contribution, :remote => true do |f|
          .modal-header
            %a.close{'data-dismiss' => 'modal'} x
            %h3 Add Contributor
          .modal-body
            = f.inputs do
              = f.input :user
              = f.input :contributable_type, :as => :hidden
              = f.input :contributable_id, :as => :hidden
          .modal-footer
            = link_to 'Close', '#', :class => 'btn', 'data-dismiss' => 'modal'
            = f.buttons do
              = f.commit_button :input_html => {:disable_with => 'wait', :class => 'btn btn-primary'}

